package pages

import (
	"github.com/mrrizkin/pohara/resources/views/layouts"
	"github.com/mrrizkin/pohara/resources/views/layouts/components"
)

type HomePageButton struct {
	Enable bool
	Label  string
	Link   string
}

type HomePageBanner struct {
	Title   string
	Content string
	Image   string
	Button  HomePageButton
}

type HomePageFeatures struct {
	Title    string
	Features []HomePageFeature
}

type HomePageFeature struct {
	Name    string
	Icon    string
	Content string
}

type HomePageService struct {
	Title   string
	Images  []string
	Content string
	Button  HomePageButton
}

type HomePageWorkflow struct {
	Title       string
	Image       string
	Description string
}

type HomePageProps struct {
	Banner       HomePageBanner
	Features     HomePageFeatures
	Services     []HomePageService
	Workflow     HomePageWorkflow
	CallToAction components.CallToActionProps
}

templ Index(props HomePageProps) {
	@layouts.Base(layouts.BaseProps{}) {
		@banner(props.Banner)
		@features(props.Features)
		@services(props.Services)
		@workflow(props.Workflow)
		@components.Cta(props.CallToAction)
	}
}

templ banner(props HomePageBanner) {
	<section class="section pb-[50px]">
		<div class="container">
			<div class="row text-center">
				<div class="mx-auto lg:col-10">
					<h1 class="font-primary font-bold">{ props.Title }</h1>
					if len(props.Content) > 0 {
						<p class="mt-4">
							@templ.Raw(props.Content)
						</p>
					}
					if props.Button.Enable {
						<a class="btn btn-primary mt-4" href={ templ.SafeURL(props.Button.Link) }>
							{ props.Button.Label }
						</a>
					}
					if len(props.Image) > 0 {
						<img
							class="mx-auto mt-12"
							src={ props.Image }
							width="750"
							height="390"
							alt="banner image"
						/>
					}
				</div>
			</div>
		</div>
	</section>
}

templ features(props HomePageFeatures) {
	<section class="section bg-theme-light">
		<div class="container">
			<div class="text-center">
				<h2>{ props.Title }</h2>
			</div>
			<div class="mt-8 grid gap-x-8 gap-y-6 sm:grid-cols-2 lg:grid-cols-3">
				for _, item := range props.Features {
					<div class="feature-card rounded-xl bg-white p-5 pb-8 text-center">
						if len(item.Icon) > 0 {
							<img
								class="mx-auto"
								alt={ item.Icon }
								src={ item.Icon }
								width="30"
								height="30"
							/>
						}
						<div class="mt-4">
							<p class="h5">{ item.Name }</p>
							<p class="mt-3">
								@templ.Raw(item.Content)
							</p>
						</div>
					</div>
				}
			</div>
		</div>
	</section>
}

templ services(props []HomePageService) {
	for index, service := range props {
		{{
	isOdd := index%2 > 0
	sectionClass := "section"
	carouselClass := "service-carousel"
	contentClass := "service-content mt-5 md:mt-0"
	if isOdd {
		sectionClass += " bg-theme-light"
	} else {
		carouselClass += " md:order-2"
		contentClass += " md:order-1"
	}
		}}
		<section class={ sectionClass }>
			<div class="container">
				<div class="items-center gap-8 md:grid md:grid-cols-2">
					<div class={ carouselClass }>
						if len(service.Images) > 1 {
							<div class="swiper">
								<div class="swiper-wrapper">
									for _, image := range service.Images {
										<div class="swiper-slide">
											<img class="mx-auto" src={ image } width="538" height="328"/>
										</div>
									}
								</div>
								<div class="pagination"></div>
							</div>
						} else {
							if len(service.Images) > 0 {
								<img class="mx-auto" src={ service.Images[0] } width="538" height="328"/>
							}
						}
					</div>
					// Content
					<div class={ contentClass }>
						<h2 class="font-bold leading-[40px]">{ service.Title }</h2>
						<p class="mt-4 mb-2">
							@templ.Raw(service.Content)
						</p>
						if service.Button.Enable {
							<a href={ templ.SafeURL(service.Button.Link) } class="cta-link inline-flex items-center text-primary">
								{ service.Button.Label }
								<img class="ml-1" src="/images/arrow-right.svg" width="18" height="14" alt="arrow"/>
							</a>
						}
					</div>
				</div>
			</div>
		</section>
	}
}

templ workflow(props HomePageWorkflow) {
	<section class="section pb-0">
		<div class="mb-8 text-center">
			<h2 class="mx-auto max-w-[400px] font-bold leading-[44px]">{ props.Title }</h2>
			<p class="mt-3">
				@templ.Raw(props.Description)
			</p>
		</div>
		<img src={ props.Image } alt="workflow image" width="1920" height="414"/>
	</section>
}
